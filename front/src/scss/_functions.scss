//@mixin apply-to($breakpoint) {
//  @if map-has-key($breakpoints, $breakpoint) {
//    @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
//      @content;
//    }
//  }
//
//  @else {
//    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
//        + "Please make sure it is defined in `$breakpoints` map.";
//  }
//}

@function choose-text-color($background) {
  @if (lightness($background) > 65) {
    // Lighter backgorund, return dark color
    @return map-get($colors, dark);
  } @else {
    // Darker background, return light color
    @return map-get($colors, light);
  }
}

/**
 * https://gist.github.com/agorilla/9df052eb1e15d8aea446
 */

@function map-get-next($map, $key, $fallback: false) {

  // Check if map is valid
  @if type_of($map) == map {

    // Check if key exists in map
    @if map_has_key($map, $key) {

      // Init index counter variable
      $i: 0;

      // Init key index
      $key-index: false;

      // Traverse map for key
      @each $map-key, $map-value in $map {
        // Update index
        $i: $i + 1;

        // If map key found, set key index
        @if $map-key == $key {
          $key-index: $i;
        }

        // If next index return next value
        @if $i == $key-index + 1 {
          @return $map-value;
        }

        // If last entry return false
        @if $i == length($map) {
          @return $fallback;
        }
      }

      @warn 'No next map item for key #{$key}';
      @return $fallback;
    }

    @warn 'No valid key #{$key} in map';
    @return $fallback;
  }

  @warn 'No valid map';
  @return $fallback;
}



@function map-get-prev($map, $key, $fallback: false) {

  // Check if map is valid
  @if type_of($map) == map {

    // Check if key exists in map
    @if map_has_key($map, $key) {

      // Init index counter variable
      $i: 0;

      // Init key index
      $key-index: false;

      // Traverse map for key
      @each $map-key, $map-value in $map {
        // Update index
        $i: $i + 1;

        // If map key found, set key index
        @if $map-key == $key {
          $key-index: $i;
        }
      }

      // Init index counter variable
      $i: 0;

      @each $map-key, $map-value in $map {
        // Update index
        $i: $i + 1;

        // If next index return prev value
        @if $i == $key-index - 1 {
          @return $map-value;
        }

        // If last entry return false
        @if $i == length($map) {
          @return $fallback;
        }
      }

      @warn 'No prev map item for key #{$key}';
      @return $fallback;
    }

    @warn 'No valid key #{$key} in map';
    @return $fallback;
  }

  @warn 'No valid map';
  @return $fallback;
}
